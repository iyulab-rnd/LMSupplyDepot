# .github/workflows/release.yml
name: Build and Release

on:
  push:
    tags:
      - 'hostapp_v*'  # hostapp_v0.1.0 등

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: 🔍 Debug project structure
      run: |
        echo "Current directory contents:"
        Get-ChildItem -Path . -Recurse -Name "*.csproj" | Where-Object { $_ -like "*HostApp*" }
        echo "Checking src directory:"
        Get-ChildItem -Path "src/" -Recurse -Name "*.csproj" | Where-Object { $_ -like "*HostApp*" }
      shell: powershell
        
    - name: 📦 Restore dependencies
      run: dotnet restore src/
      
    - name: 🔨 Build and Publish
      run: |
        dotnet publish src/LMSupplyDepots.HostApp/LMSupplyDepots.HostApp.csproj `
          -c Release `
          -o output/host-app
    
    - name: 📋 Get version from tag
      id: version
      run: |
        $tag = $env:GITHUB_REF -replace 'refs/tags/', ''
        if ($tag -match '^hostapp_v(.+)$') {
          $version = $matches[1]
        } elseif ($tag -match '^v(.+)$') {
          $version = $matches[1]
        } else {
          $version = $tag
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "TAG=$tag" >> $env:GITHUB_OUTPUT
        echo "Version: $version, Tag: $tag"
      shell: powershell
      
    - name: 📦 Create ZIP archive
      id: zip
      run: |
        $version = "${{ steps.version.outputs.VERSION }}"
        $zipFile = "LMSupplyDepots.HostApp-v$version-win-x64.zip"
        Compress-Archive -Path "output/host-app/*" -DestinationPath $zipFile -Force
        echo "ZIP_FILE=$zipFile" >> $env:GITHUB_OUTPUT
      shell: powershell
      
    - name: 📄 Generate Release Notes
      id: notes
      run: |
        $version = "${{ steps.version.outputs.VERSION }}"
        $notes = @"
        ## 🎉 LMSupplyDepots HostApp v$version
        
        ### 📦 다운로드
        - **Windows x64**: LMSupplyDepots.HostApp-v$version-win-x64.zip
        
        ### 🚀 설치 방법
        1. ZIP 파일을 다운로드하고 압축을 해제합니다
        2. \`LMSupplyDepots.HostApp.exe\`를 실행합니다
        
        ### 🔧 시스템 요구사항
        - Windows 10/11 (x64)
        - .NET 9.0 Runtime 필요
        
        ### 📋 이번 릴리스의 변경사항
        - 자동 생성된 릴리스입니다
        - 최신 코드 변경사항이 포함되어 있습니다
        "@
        
        $notes | Out-File -FilePath release_notes.txt -Encoding utf8
        echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_OUTPUT
        Get-Content release_notes.txt | ForEach-Object { echo $_ >> $env:GITHUB_OUTPUT }
        echo "EOF" >> $env:GITHUB_OUTPUT
      shell: powershell

    # 기존 릴리스가 있는지 확인하고 삭제 (선택사항)
    - name: 🗑️ Delete existing release if exists
      continue-on-error: true
      run: |
        $tag = "${{ steps.version.outputs.TAG }}"
        try {
          gh release delete $tag --yes
          echo "기존 릴리스 $tag 삭제됨"
        } catch {
          echo "기존 릴리스가 없거나 삭제 실패: $_"
        }
      shell: powershell
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    # 최신 actions 사용
    - name: 🎯 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.TAG }}
        name: LMSupplyDepots HostApp v${{ steps.version.outputs.VERSION }}
        body: ${{ steps.notes.outputs.RELEASE_NOTES }}
        files: ${{ steps.zip.outputs.ZIP_FILE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🎊 Success Notification
      run: |
        echo "🎉 Release v${{ steps.version.outputs.VERSION }} 배포 완료!"
        echo "🔗 릴리스 페이지에서 확인하세요: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.TAG }}"
